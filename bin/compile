#!/usr/bin/env bash

# fail fast
set -eu

indent() {
  sed -u 's/^/       /'
}

# parse args
export BUILD_DIR=$1
CACHE_DIR=$2
OPT_DIR=$BP_DIR/../opt/

export_env_dir $3

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
OPT_DIR=$BP_DIR/../opt/

echo -n "-----> Installing ngrok... "
mkdir -p $BUILD_DIR/.heroku/bin
curl --silent --retry 3 -o ngrok.zip -L "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip" | indent
unzip ngrok.zip -d $BUILD_DIR/.heroku/bin > /dev/null 2>&1
chmod +x $BUILD_DIR/.heroku/bin/ngrok

echo "-----> Installing screen... "
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall screen | indent

mkdir -p $BUILD_DIR/.apt/var/run/screen
export SCREENDIR="\$HOME/.apt/var/run/screen"

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  dpkg -x $DEB $BUILD_DIR/.apt/
done

cp $OPT_DIR/with_ngrok $BUILD_DIR/.heroku/bin/with_ngrok
chmod +x $BUILD_DIR/.heroku/bin/with_ngrok
echo " done"

mkdir -p $BUILD_DIR/.profile.d
cat << EOF > $BUILD_DIR/.profile.d/ngrok.sh
export PATH=\$HOME/.heroku/bin:\$PATH
EOF
